ðŸ“Œ Question :   

There are n users registered on the website CuteKittens.com. Each of them has a unique password represented by pass[1], pass[2], ..., pass[N]. As this is a very lovely site, many people want to access those awesomely cute pics of the kittens. But the adamant admin does not want the site to be available to the general public, so only those people who have passwords can access it.

You, being an awesome hacker finds a loophole in the password verification system. A string which is a concatenation of one or more passwords, in any order, is also accepted by the password verification system. Any password can appear 0 or more times in that string. Given access to each of the n passwords, and also have a string login attempt, determine whether this string is accepted by the password verification system of the website. If all of the login attempt strings can be created by concatenating password strings, it is accepted. In this case, return the passwords in the order they must be concatenated, each separated by a single space on one line. If the password attempt will not be accepted, return 'WRONG PASSWORD'.

ðŸ“Œ Explanation:

In this program First I take one for each loop for a list of passwords and from that, I have created one map which stores the first character as a key, and from the value, I put all matching passwords which start with that character as a list of values. after that, I will call the helper function and pass the map, login attempt string, and 0 as an argument.

In the helper function First I take the first character of the login attempt string and search the list from the map. if I didn't receive the list then I simply return "WRONG PASSWORD". After that, I take one for loop for that list. In this for loop first I get the first password and check if the login attempt string starts with that password if the condition satisfies then I extract that word from the login attempt string and create a new string. 

After that, I check if the new string is empty. if the condition is satisfied then I return the current password else I check if index + currentpassword.length() is not present in the visited list. if the condition is satisfied then I will recursively call the helper function and now I pass newloginattempt string as an argument and store its response in newreturnable string. After that, I check if the newreturnable string is not equal to "WRONG PASSWORD" and then I return the current password + newreturnable string.

ðŸ“Œ Example:
ðŸ“Œ Input: 

because can do must we what
wedowhatwemustbecausewecan

hello planet
helloworld

ab abcd cd
abcd

ðŸ“Œ Output: 

we do what we must because we can
WRONG PASSWORD
ab cd