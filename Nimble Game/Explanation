Question :   

Two people are playing Nimble! The rules of the game are:

- The game is played on a line of n squares, indexed from 0 to n-1. Each square i (where 0<=i<n) contains ci coins.

- The players move in alternating turns. During each move, the current player must remove exactly 1 coin from square i and move it to square j if and only if 0<=j<i.

- The game ends when all coins are in square 0 and nobody can make a move. The first player to have no available move loses the game.

Given the value of n and the number of coins in each square, determine whether the person who wins the game is the first or second person to move. Assume both players move optimally.

Explanation:

    In this program, the Player has to remove the coin from the square and have to put it into another square that is present on the left side. each time player can move exactly 1 coin who doesn't have any coin to move at last will loses the game. For that, I apply the logic of xor. 

    I take one for loop to count the xor of the distance of the square from the 0th square which has an odd number of coins and store it into a variable. At last, I check if ans equal to 0 if this condition satisfies then I return "Second" else I return "First".

Example:

Input:  2
        5
        0 2 3 0 6
        4
        0 0 0 0

Output: First
        Second